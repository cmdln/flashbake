diff --git a/.coafile b/.coafile
new file mode 100644
index 0000000..9ee76a2
--- /dev/null
+++ b/.coafile
@@ -0,0 +1,11 @@
+# Generated by coala-quickstart on 14 Jul 2017.
+[default]
+bears = coalaBear, FilenameBear, InvalidLinkBear
+files = **.py, **.yml
+ignore = 
+[python]
+bears = PycodestyleBear
+files = **.py
+[yaml]
+bears = LineLengthBear, YAMLLintBear
+files = **.yml
diff --git a/coala-ci.log b/coala-ci.log
new file mode 100644
index 0000000..7b25502
--- /dev/null
+++ b/coala-ci.log
@@ -0,0 +1,2428 @@
+Executing section Default...
+
+src/flashbake/plugins/microblog.py
+| 142| ••••••••self.service_url•=•'http://identi.ca/api'
+|    | [MAJOR] InvalidLinkBear:
+|    | Broken link - unable to connect to http://identi.ca/api
+
+.travis.yml
+|  12| ••#•Create•two•diff•files,•and•upload•to•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  17| ••-•cat•sans-whitespace.diff•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  19| ••-•cat•with-whitespace.diff•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  20| ••#•Upload•logs•to•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+
+.travis.yml
+|  21| ••-•cat•coala-ci.log•|•curl•-F•'clbin=<-'•https://clbin.com
+|    | [NORMAL] InvalidLinkBear:
+|    | Broken link - unable to connect to https://clbin.com (HTTP Error: 404)
+Executing section python...
+
+src/flashbake/plugins/growl.py
+|  29| class•Growl(plugins.AbstractNotifyPlugin):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/growl.py
+|  37| ••••••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/growl.py
+|  39| ••••••••if•self.growlnotify•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/growl.py
+|  42| ••••••••if•self.growlnotify•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/growl.py
+|  43| ••••••••••••raise•plugins.PluginError(plugins.PLUGIN_ERRORS.ignorable_error,•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/plugins/growl.py
+|  43| ••••••••••••raise•plugins.PluginError(plugins.PLUGIN_ERRORS.ignorable_error,•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/plugins/growl.py
+|  43| ••••••••••••raise•plugins.PluginError(plugins.PLUGIN_ERRORS.ignorable_error,•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (96 > 79 characters)'
+
+src/flashbake/plugins/growl.py
+|  46| ••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/growl.py
+|  50| ••••••••args•=•[•self.growlnotify,•'--name',•'flashbake'•]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+src/flashbake/plugins/growl.py
+|  50| ••••••••args•=•[•self.growlnotify,•'--name',•'flashbake'•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+src/flashbake/plugins/growl.py
+|  51| ••••••••if•self.host•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/growl.py
+|  52| ••••••••••••args•+=•[•'--udp',•'--host',•self.host]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+src/flashbake/plugins/growl.py
+|  53| ••••••••if•self.port•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/growl.py
+|  54| ••••••••••••args•+=•[•'--port',•self.port•]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+src/flashbake/plugins/growl.py
+|  54| ••••••••••••args•+=•[•'--port',•self.port•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+src/flashbake/plugins/growl.py
+|  55| ••••••••if•self.password•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/growl.py
+|  56| ••••••••••••args•+=•[•'--password',•self.password•]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+src/flashbake/plugins/growl.py
+|  56| ••••••••••••args•+=•[•'--password',•self.password•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+src/flashbake/plugins/growl.py
+|  60| ••••••••subprocess.Popen(args,•stdout=subprocess.PIPE,•stderr=subprocess.STDOUT,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/plugins/growl.py
+|  61| •••••••••••••••••••••••••••••close_fds=True)
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+src/flashbake/plugins/growl.py
+|  65| ••••••••••••The•most•common•case•is•that•one•or•two•files•will•be•off,•a•large•number
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+src/flashbake/plugins/growl.py
+|  66| ••••••••••••of•them•can•be•considered•pathological,•e.g.•someone•who•didn't•read•the
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+src/flashbake/plugins/growl.py
+|  68| ••••••••#•if•calling•growl•locally,•then•the•current•user•must•be•logged•into•the•console
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/growl.py
+|  69| ••••••••if•self.host•==•None•and•not•self.__active_console():
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/growl.py
+|  77| ••••••••••••••••••••••••••'The•file,•"%s",•is•missing.'•%•file)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/growl.py
+|  81| ••••••••••••••••••••••••••'The•file,•"%s",•has•been•deleted•from•version•control.'•%•file)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/growl.py
+|  81| ••••••••••••••••••••••••••'The•file,•"%s",•has•been•deleted•from•version•control.'•%•file)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+src/flashbake/plugins/growl.py
+|  85| ••••••••••••••••••••••••••'The•file,•"%s",•is•a•link.'•%•file)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/growl.py
+|  88| ••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/growl.py
+|  90| ••••••••••••••••••••••••••'The•file,•"%s",•is•a•link•to•%s.'•%•(link,•file))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/growl.py
+|  95| ••••••••[self.growl_notify('External•file•in•project,•%s'•%•project_name,
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (2)'
+
+src/flashbake/plugins/growl.py
+|  96| •••••••••••••••••••••••••••'The•file,•"%s",•exists•outside•of•the•project•directory.'•%•file)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+src/flashbake/plugins/growl.py
+|  97| ••••••••for•file•in•hot_files.outside_files]
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/growl.py
+| 112| ••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/growl.py
+| 129| 
+|    | [NORMAL] PycodestyleBear (W391):
+|    | W391 blank line at end of file'
+
+src/flashbake/plugins/uptime.py
+|  18| '''••uptime.py•-•Stock•plugin•to•calculate•the•system's•uptime•and•add•to•the•commit•message.'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (96 > 79 characters)'
+
+src/flashbake/plugins/uptime.py
+|  28| class•UpTime(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/uptime.py
+|  34| ••••••••if•uptime•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/uptime.py
+|  69| ••••••••#•Build•up•the•pretty•string•(like•this:•"N•days,•N•hours,•N•minutes,•N•seconds")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/uptime.py
+|  74| ••••••••••••string•+=•str(hours)•+•"•"•+•(hours•==•1•and•"hour"•or•"hours")•+•",•"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/plugins/uptime.py
+|  76| ••••••••••••string•+=•str(minutes)•+•"•"•+•(minutes•==•1•and•"minute"•or•"minutes")•+•",•"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+src/flashbake/plugins/uptime.py
+|  83| ••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/uptime.py
+|  88| ••••••••#•Try•to•capture•output•of•'uptime'•command,•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/plugins/uptime.py
+| 107| ••••••••#•If•time•is•exactly•x•hours/mins,•no•":"•in•"hours_and_minutes"•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/plugins/uptime.py
+| 122| ••••••••uptime•=•(days•+•("•day,•"•if•days•==•"1"•else•"•days,•")•+•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/plugins/uptime.py
+| 123| ••••••••••••••••hours•+•("•hour,•"•if•hours•==•"1"•else•"•hours,•")•+•
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/uptime.py
+| 123| ••••••••••••••••hours•+•("•hour,•"•if•hours•==•"1"•else•"•hours,•")•+•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/plugins/uptime.py
+| 124| ••••••••••••••••minutes•+•("•minute"•if•minutes•==•"1"•else•"•minutes"))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/uptime.py
+| 127| 
+|    | [NORMAL] PycodestyleBear (W391):
+|    | W391 blank line at end of file'
+
+src/flashbake/console.py
+|   3| '''••flashbake•-•wrapper•script•that•will•get•installed•by•setup.py•into•the•execution•path•'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (95 > 79 characters)'
+
+src/flashbake/console.py
+|  56| ••••••••••••format='%(message)s')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+|  70| ••••hot_files,•control_config•=•_load_user_control(home_dir,•project_dir,•options)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/console.py
+|  74| ••••if•None•==•control_file:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/console.py
+|  79| ••••••••sys.exit(_context_only(options,•project_dir,•control_file,•control_config,•hot_files))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+src/flashbake/console.py
+|  86| ••••••••••••parser.error('Quiet•minutes,•"%s",•must•be•a•valid•number.'•%•args[1])
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/console.py
+|  89| ••••••••(hot_files,•control_config)•=•control.parse_control(project_dir,•control_file,•control_config,•hot_files)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (113 > 79 characters)'
+
+src/flashbake/console.py
+|  97| ••••••••(hot_files,•control_config)•=•control.prepare_control(hot_files,•control_config)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/console.py
+| 152| ••••for•path,•dirs,•files•in•os.walk(root):•#@UnusedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/console.py
+| 152| ••••for•path,•dirs,•files•in•os.walk(root):•#@UnusedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/console.py
+| 154| ••••••••••••os.path.normpath(path)•for•filename•in•files•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/console.py
+| 197| ••••••••••••action='store_true',•default=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 198| ••••••••••••help='just•generate•and•show•the•commit•message,•don\'t•check•for•changes')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 198| ••••••••••••help='just•generate•and•show•the•commit•message,•don\'t•check•for•changes')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/console.py
+| 200| ••••••••••••action='store_true',•default=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 201| ••••••••••••help='include•debug•information•in•the•output')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 203| ••••••••••••action='store_true',•default=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 204| ••••••••••••help='disable•all•output•excepts•errors')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 206| ••••••••••••action='store_true',•default=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 207| ••••••••••••help='execute•a•dry•run')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 209| ••••••••••••action='store',•type='string',•metavar='PLUGIN_DIR',
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 210| ••••••••••••help='specify•an•additional•location•for•plugins')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 212| ••••••••••••action='store_true',•default=False,
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 213| ••••••••••••help='purge•any•files•that•have•been•deleted•from•source•control')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 232| ••••••••logging.debug('3rd•party•plugin•directory•exists,•adding:•%s'•%•real_plugin_dir)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/console.py
+| 238| ••••if•options.plugin_dir•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/console.py
+| 243| ••••••••••••logging.warn('Plugin•directory,•%s,•doesn\'t•exist.'•%•options.plugin_dir)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+src/flashbake/console.py
+| 247| def•_load_user_control(home_dir,•project_dir,•options):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/console.py
+| 250| ••••••••(hot_files,•control_config)•=•control.parse_control(project_dir,•control_file)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+src/flashbake/console.py
+| 266| ••••••••parser.error('Could•not•find•.flashbake•or•.control•file•in•directory,•"%s".'•%•project_dir)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (100 > 79 characters)'
+
+src/flashbake/console.py
+| 272| def•_context_only(options,•project_dir,•control_file,•control_config,•hot_files):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+src/flashbake/console.py
+| 274| ••••••••(hot_files,•control_config)•=•control.parse_control(project_dir,•control_file,•control_config,•hot_files)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (113 > 79 characters)'
+
+src/flashbake/console.py
+| 276| ••••••••(hot_files,•control_config)•=•control.prepare_control(hot_files,•control_config)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/console.py
+| 298| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.unknown_plugin•or•plugin_error.reason•==•PLUGIN_ERRORS.invalid_plugin:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (134 > 79 characters)'
+
+src/flashbake/console.py
+| 298| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.unknown_plugin•or•plugin_error.reason•==•PLUGIN_ERRORS.invalid_plugin:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/console.py
+| 298| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.unknown_plugin•or•plugin_error.reason•==•PLUGIN_ERRORS.invalid_plugin:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/console.py
+| 302| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.missing_attribute:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/console.py
+| 302| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.missing_attribute:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/console.py
+| 302| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.missing_attribute:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/console.py
+| 303| ••••••••logging.error('Plugin,•%s,•doesn\'t•have•the•needed•plugin•attribute,•%s.'•\
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+src/flashbake/console.py
+| 303| ••••••••logging.error('Plugin,•%s,•doesn\'t•have•the•needed•plugin•attribute,•%s.'•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/console.py
+| 304| ••••••••••••••••%•(plugin_error.plugin_spec,•plugin_error.name))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 307| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.invalid_attribute:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/console.py
+| 307| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.invalid_attribute:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/console.py
+| 307| ••••if•plugin_error.reason•==•PLUGIN_ERRORS.invalid_attribute:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/console.py
+| 308| ••••••••logging.error('Plugin,•%s,•has•an•invalid•plugin•attribute,•%s.'•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/console.py
+| 309| ••••••••••••••••%•(plugin_error.plugin_spec,•plugin_error.name))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/console.py
+| 313| ••••••••logging.error('Plugin,•%s,•requires•the•config•option,•%s,•but•it•was•missing.'•\
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/console.py
+| 313| ••••••••logging.error('Plugin,•%s,•requires•the•config•option,•%s,•but•it•was•missing.'•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/console.py
+| 314| ••••••••••••••••%•(plugin_error.plugin_spec,•plugin_error.name))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/__init__.py
+|  24| import•flashbake.plugins•#@UnresolvedImport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+|  24| import•flashbake.plugins•#@UnresolvedImport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+|  30| import•sys•#@Reimport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+|  30| import•sys•#@Reimport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+|  35| class•ConfigError(Exception):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/__init__.py
+|  60| ••••••••'''•Parse•a•line•from•the•control•file•if•it•is•relevant•to•plugin•configuration.•'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+src/flashbake/__init__.py
+|  79| ••••••••••••if•not•prop_name•in•self.__dict__:
+|    | [NORMAL] PycodestyleBear (E713):
+|    | E713 test for membership should be 'not in''
+
+src/flashbake/__init__.py
+|  80| ••••••••••••••••self.extra_props[prop_name]•=•prop_value;
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+src/flashbake/__init__.py
+|  89| ••••••••••••••••••••••••'The•value,•%s,•for•option,•%s,•could•not•be•parse•as•%s.'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/__init__.py
+|  98| ••••••••if•self.initialized•==•True:
+|    | [NORMAL] PycodestyleBear (E712):
+|    | E712 comparison to True should be 'if cond is True:' or 'if cond:''
+
+src/flashbake/__init__.py
+| 135| ••••••••••••••••if•not•e.reason•==•PLUGIN_ERRORS.ignorable_error:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+| 135| ••••••••••••••••if•not•e.reason•==•PLUGIN_ERRORS.ignorable_error:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+| 135| ••••••••••••••••if•not•e.reason•==•PLUGIN_ERRORS.ignorable_error:•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+src/flashbake/__init__.py
+| 139| ••••••••••••••••••••••••(plugin_name,•e.name))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/__init__.py
+| 166| ••••••••••••if•type•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/__init__.py
+| 171| ••••••••••••••••••••••••••••%•(name,•value))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/__init__.py
+| 184| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+| 184| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+| 184| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+src/flashbake/__init__.py
+| 194| ••••••••••••raise•PluginError(PLUGIN_ERRORS.unknown_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+| 194| ••••••••••••raise•PluginError(PLUGIN_ERRORS.unknown_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+| 194| ••••••••••••raise•PluginError(PLUGIN_ERRORS.unknown_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+src/flashbake/__init__.py
+| 202| ••••••••••••raise•PluginError(PLUGIN_ERRORS.unknown_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+| 202| ••••••••••••raise•PluginError(PLUGIN_ERRORS.unknown_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+| 202| ••••••••••••raise•PluginError(PLUGIN_ERRORS.unknown_plugin,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+src/flashbake/__init__.py
+| 203| ••••••••is_message_plugin•=•isinstance(plugin,•flashbake.plugins.AbstractMessagePlugin)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/__init__.py
+| 204| ••••••••is_file_plugin•=•isinstance(plugin,•flashbake.plugins.AbstractFilePlugin)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+src/flashbake/__init__.py
+| 205| ••••••••is_notify_plugin•=•isinstance(plugin,•flashbake.plugins.AbstractNotifyPlugin)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+src/flashbake/__init__.py
+| 206| ••••••••if•not•is_message_plugin•and•not•is_file_plugin•and•not•is_notify_plugin:
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+src/flashbake/__init__.py
+| 207| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_type,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+| 207| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_type,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+| 207| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_type,•plugin_spec)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+src/flashbake/__init__.py
+| 227| ••••••••••••raise•PluginError(PLUGIN_ERRORS.missing_attribute,•plugin_spec,•name)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (101 > 79 characters)'
+
+src/flashbake/__init__.py
+| 227| ••••••••••••raise•PluginError(PLUGIN_ERRORS.missing_attribute,•plugin_spec,•name)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+| 227| ••••••••••••raise•PluginError(PLUGIN_ERRORS.missing_attribute,•plugin_spec,•name)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+| 230| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_attribute,•plugin_spec,•name)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (101 > 79 characters)'
+
+src/flashbake/__init__.py
+| 230| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_attribute,•plugin_spec,•name)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/__init__.py
+| 230| ••••••••••••raise•PluginError(PLUGIN_ERRORS.invalid_attribute,•plugin_spec,•name)•#@UndefinedVariable
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/__init__.py
+| 233| ••••#•with•thanks•to•Ben•Snider
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (2)'
+
+src/flashbake/__init__.py
+| 245| ••••def•__init__(self,•plugin):
+|    | [NORMAL] PycodestyleBear (E301):
+|    | E301 expected 1 blank line, found 0'
+
+src/flashbake/__init__.py
+| 265| ••••Track•the•files•as•they•are•parsed•and•manipulated•with•regards•to•their•git
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/__init__.py
+| 282| •••••••••••••••%•(filename,•glob.glob(to_expand)))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/__init__.py
+| 283| ••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/__init__.py
+| 291| ••••••••••••#•track•whether•iglob•iterates•at•all,•if•it•does•not,•then•the•line
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/__init__.py
+| 316| ••••••••••••if•link•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/__init__.py
+| 328| ••••••••if•filename•in••self.control_files:
+|    | [NORMAL] PycodestyleBear (E271):
+|    | E271 multiple spaces after keyword'
+
+src/flashbake/__init__.py
+| 348| ••••••••"""•Returns•any•original•glob-based•file•specifications•from•the•control•file•that•would•match
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+src/flashbake/__init__.py
+| 349| ••••••••••••the•input•filename.••Useful•for•file•plugins•that•add•their•own•globs•and•need•to•correlate
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (103 > 79 characters)'
+
+src/flashbake/__init__.py
+| 352| ••••••••••••return•re.match(file_tuple[1],•filename)•!=•None
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/__init__.py
+| 360| ••••••••••••logging.info('%s•is•a•link•or•its•directory•path•contains•a•link.'•%•filename)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+src/flashbake/__init__.py
+| 367| ••••••••#•print•warnings•for•files•that•were•once•under•version•control•but•have•been•deleted
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+src/flashbake/__init__.py
+| 369| ••••••••••••logging.info('%s•has•been•deleted•from•version•control.'•%•filename)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/__init__.py
+| 394| •••••••••••••••or•len(self.linked_files)•>•0
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/__init__.py
+| 395| •••••••••••••••or•len(self.outside_files)•>•0
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/__init__.py
+| 396| •••••••••••••••or•len(self.deleted)•>•0)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/__init__.py
+| 422| def•find_executable(executable):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/__init__.py
+| 423| ••••ex_paths•=•(os.path.join(path,•executable)•for•path•in•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/__init__.py
+| 424| ••••••••••••••••••••os.getenv('PATH').split(os.pathsep))
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+src/flashbake/__init__.py
+| 425| ••••paths•=•(ex_path•for•ex_path•in•ex_paths•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/__init__.py
+| 426| •••••••••••••••••if•os.path.exists(ex_path))
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+src/flashbake/__init__.py
+| 429| def•executable_available(executable):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/__init__.py
+| 430| ••••return•find_executable(executable)•!=•None
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/microblog.py
+|  27| class•Twitter(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/microblog.py
+|  31| ••••••••self.optional_field_info•=•{•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/microblog.py
+|  32| ••••••••••••'source':{'path':'source',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  32| ••••••••••••'source':{'path':'source',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  32| ••••••••••••'source':{'path':'source',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  32| ••••••••••••'source':{'path':'source',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/microblog.py
+|  33| ••••••••••••'location':{'path':'user/location',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  33| ••••••••••••'location':{'path':'user/location',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  33| ••••••••••••'location':{'path':'user/location',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  33| ••••••••••••'location':{'path':'user/location',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/microblog.py
+|  34| ••••••••••••'favorited':{'path':'favorited',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  34| ••••••••••••'favorited':{'path':'favorited',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  34| ••••••••••••'favorited':{'path':'favorited',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  34| ••••••••••••'favorited':{'path':'favorited',•'transform':propercase},•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/microblog.py
+|  35| ••••••••••••'tweeted_on':•{'path':'created_at',•'transform':utc_to_local},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  35| ••••••••••••'tweeted_on':•{'path':'created_at',•'transform':utc_to_local},•\
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  35| ••••••••••••'tweeted_on':•{'path':'created_at',•'transform':utc_to_local},•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/microblog.py
+|  43| ••••••••••••logging.warn('Please•use•a•limit•<=•200.');
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+src/flashbake/plugins/microblog.py
+|  49| ••••••••self.twitter_url•=•'%(url)s/statuses/user_timeline/%(user)s.xml?count=%(limit)d'•%•{
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  50| ••••••••••••'url':self.service_url,
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  51| ••••••••••••'user':self.user,
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  52| ••••••••••••'limit':self.limit}
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  57| ••••••••if•(self.optional_fields•==•None):
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/microblog.py
+|  66| ••••••••••••••••if•(field•in•self.optional_field_info•and•field•not•in•newFields):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  67| ••••••••••••••••••••#•if•so•we•push•them•onto•the•optional•fields•array,•otherwise•ignore
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  69| ••••••••••••#•finally•sort•the•list•so•its•the•same•each•run,•provided•the•config•is•the•same
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  76| ••••••••if•(len(last_tweets)•>•0•and•title•!=•None):
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/microblog.py
+|  77| ••••••••••••to_file•=•('Last•%(item_count)d•%(service_name)s•messages•from•%(twitter_title)s:\n'•\
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (98 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  77| ••••••••••••to_file•=•('Last•%(item_count)d•%(service_name)s•messages•from•%(twitter_title)s:\n'•\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/microblog.py
+|  78| ••••••••••••••••%•{'item_count'•:•len(last_tweets),•'twitter_title'•:•title,•'service_name':self.service_name})
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/microblog.py
+|  78| ••••••••••••••••%•{'item_count'•:•len(last_tweets),•'twitter_title'•:•title,•'service_name':self.service_name})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/microblog.py
+|  78| ••••••••••••••••%•{'item_count'•:•len(last_tweets),•'twitter_title'•:•title,•'service_name':self.service_name})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/microblog.py
+|  78| ••••••••••••••••%•{'item_count'•:•len(last_tweets),•'twitter_title'•:•title,•'service_name':self.service_name})
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (111 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  78| ••••••••••••••••%•{'item_count'•:•len(last_tweets),•'twitter_title'•:•title,•'service_name':self.service_name})
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ':''
+
+src/flashbake/plugins/microblog.py
+|  84| ••••••••••••••••••••to_file•+=•('\t%s:•%s\n'•%•(propercase(field),•item[field]))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  90| ••••••••••••message_file.write('Couldn\'t•fetch•entries•from•feed,•%s.\n'•%•self.twitter_url)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+|  98| ••••••••any•optional•fields.•The•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/plugins/microblog.py
+| 108| ••••••••••••logging.error('Plugin,•%s,•failed•to•connect•with•network.'•%•self.__class__)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+| 112| ••••••••••••logging.error('Plugin,•%s,•failed•to•connect•with•network.'•%•self.__class__)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+| 120| ••••••••if•(status•==•None):
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/microblog.py
+| 130| ••••••••••••••••tweet[field]•=•status.find(self.optional_field_info[field]['path']).text
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+| 132| ••••••••••••••••••••tweet[field]•=•self.optional_field_info[field]['transform'](tweet[field])
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+| 143| ••••••••self.optional_field_info['created_on']•=•self.optional_field_info['tweeted_on']
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+| 156| ••••'''•ganked•from•http://feihonghsu.blogspot.com/2008/02/converting-from-local-time-to-utc.html•'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (101 > 79 characters)'
+
+src/flashbake/plugins/microblog.py
+| 157| ••••import•calendar,•datetime
+|    | [NORMAL] PycodestyleBear (E401):
+|    | E401 multiple imports on one line'
+
+src/flashbake/plugins/microblog.py
+| 162| ••••return•datetime.datetime.fromtimestamp((calendar.timegm(datetime.datetime.strptime(t,•'%a•%b•%d•%H:%M:%S•%Y').timetuple()))).strftime("%A,•%b.•%d,•%Y•at•%I:%M%p•%z")
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (169 > 79 characters)'
+
+src/flashbake/compat.py
+|  25| __all__•=•[•'relpath',•'next_',•'iglob',•'MIMEText'•]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+src/flashbake/compat.py
+|  25| __all__•=•[•'relpath',•'next_',•'iglob',•'MIMEText'•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+src/flashbake/compat.py
+|  42| ••••from•email.MIMEText•import•MIMEText•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/compat.py
+|  42| ••••from•email.MIMEText•import•MIMEText•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/compat.py
+|  44| ••••from•email.mime.text•import•MIMEText•#@Reimport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/compat.py
+|  44| ••••from•email.mime.text•import•MIMEText•#@Reimport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/compat.py
+|  46| def•__fallback_relpath(path,•start='.'):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/compat.py
+|  59| def•__fallback_next(*args):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/compat.py
+|  61| ••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/compat.py
+|  62| ••••Return•the•next•item•from•the•iterator.•If•default•is•given•and•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/compat.py
+|  63| ••••the•iterator•is•exhausted,•it•is•returned•instead•of•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/compat.py
+|  81| ••••••••••••raise•TypeError('%s•object•is•not•an•iterator'•
+|    | [NORMAL] PycodestyleBear (W291):
+|    | W291 trailing whitespace'
+
+src/flashbake/compat.py
+|  89| if•hasattr(os.path,•"relpath"):
+|    | [NORMAL] PycodestyleBear (E305):
+|    | E305 expected 2 blank lines after class or function definition, found 1'
+
+src/flashbake/compat.py
+|  93| ••••••••import•pathutils•#@UnresolvedImport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/compat.py
+|  93| ••••••••import•pathutils•#@UnresolvedImport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/compat.py
+|  97| ••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/compat.py
+|  98| #next_
+|    | [NORMAL] PycodestyleBear (E265):
+|    | E265 block comment should start with '# ''
+
+src/flashbake/compat.py
+| 100| ••••next_=__builtin__.next
+|    | [NORMAL] PycodestyleBear (E225):
+|    | E225 missing whitespace around operator'
+
+src/flashbake/compat.py
+| 103| 
+|    | [NORMAL] PycodestyleBear (W391):
+|    | W391 blank line at end of file'
+
+src/flashbake/plugins/weather.py
+|  19| '''••weather.py•-•Stock•plugin•for•adding•weather•information•to•context,•must•have•TZ•or
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/weather.py
+|  34| class•Weather(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/weather.py
+|  41| ••••••••##•plugin•uses•location_location•from•Location•plugin
+|    | [NORMAL] PycodestyleBear (E266):
+|    | E266 too many leading '#' for block comment'
+
+src/flashbake/plugins/weather.py
+|  48| ••••••••if•config.location_location•==•None•and•self.city•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/weather.py
+|  50| ••••••••••••if•zone•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/weather.py
+|  55| ••••••••••••if•config.location_location•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/weather.py
+|  60| ••••••••if•None•==•city:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/weather.py
+|  64| ••••••••if•self.appid•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/weather.py
+|  65| ••••••••••••message_file.write('Open•Weather•Map•requires•an•API•key.•For•more•information•see:•https://github.com/commandline/flashbake/wiki/Plugins')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (151 > 79 characters)'
+
+src/flashbake/plugins/weather.py
+|  72| ••••••••••••message_file.write('Current•weather•for•%(city)s:•%(description)s.•%(temp)i%(temp_units)s.•%(humidity)s%%•humidity\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (129 > 79 characters)'
+
+src/flashbake/plugins/weather.py
+|  73| ••••••••••••••••••••%•weather)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/weather.py
+|  75| ••••••••••••message_file.write('Couldn\'t•fetch•current•weather•for•city,•%s.\n'•%•city)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/plugins/weather.py
+|  79| ••••••••"""•This•relies•on•Open•Weather•Map's•API•which•may•change•without•notice.•"""
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+src/flashbake/plugins/weather.py
+|  83| ••••••••for_city•=•baseurl•+•urllib.urlencode({'q':•city,•'units':•units,•'appid':•appid})
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+src/flashbake/plugins/weather.py
+|  87| ••••••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/weather.py
+|  90| ••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/weather.py
+|  96| ••••••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/weather.py
+|  97| ••••••••••••for•k,v•in•(data['weather'][0]).items():
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+src/flashbake/plugins/weather.py
+|  98| ••••••••••••••weather[k]•=•v
+|    | [NORMAL] PycodestyleBear (E111):
+|    | E111 indentation is not a multiple of four'
+
+src/flashbake/plugins/weather.py
+| 100| ••••••••••••for•k,v•in•data['main'].items():
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+src/flashbake/plugins/weather.py
+| 101| ••••••••••••••weather[k]•=•v
+|    | [NORMAL] PycodestyleBear (E111):
+|    | E111 indentation is not a multiple of four'
+
+src/flashbake/plugins/weather.py
+| 104| ••••••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/weather.py
+| 106| ••••••••••••••weather['temp_units']•=•'F'
+|    | [NORMAL] PycodestyleBear (E111):
+|    | E111 indentation is not a multiple of four'
+
+src/flashbake/plugins/weather.py
+| 108| ••••••••••••••weather['temp_units']•=•'C'
+|    | [NORMAL] PycodestyleBear (E111):
+|    | E111 indentation is not a multiple of four'
+
+src/flashbake/plugins/weather.py
+| 110| ••••••••••••••weather['temp_units']•=•'K'
+|    | [NORMAL] PycodestyleBear (E111):
+|    | E111 indentation is not a multiple of four'
+
+src/flashbake/plugins/weather.py
+| 117| ••••••••••••logging.error('Plugin,•%s,•failed•to•connect•with•network.'•%•self.__class__)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/weather.py
+| 122| ••••••••if•None•==•zone:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/weather.py
+| 126| ••••••••••••logging.warning('Zone•id,•"%s",•doesn''t•appear•to•contain•a•city.'•%•zone)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/scrivener.py
+|  25| import•flashbake•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+src/flashbake/plugins/scrivener.py
+|  25| import•flashbake•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+src/flashbake/plugins/scrivener.py
+|  37| def•find_scrivener_projects(hot_files,•config,•flush_cache=False):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/plugins/scrivener.py
+|  41| ••••if•config.scrivener_projects•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/scrivener.py
+|  66| ##•TODO:•deal•with•deleted•files
+|    | [NORMAL] PycodestyleBear (E266):
+|    | E266 too many leading '#' for block comment'
+
+src/flashbake/plugins/scrivener.py
+|  77| ••••••••••••••••#logging.debug("•-•%s"•%•hotfile)
+|    | [NORMAL] PycodestyleBear (E265):
+|    | E265 block comment should start with '# ''
+
+src/flashbake/plugins/scrivener.py
+| 152| ••••••••••••••••if•not•hot_logfile•in•hot_files.control_files:
+|    | [NORMAL] PycodestyleBear (E713):
+|    | E713 test for membership should be 'not in''
+
+src/flashbake/plugins/scrivener.py
+| 192| •••••••••••••••••••••••••••••close_fds=True)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/default.py
+|  18| '''••default.py•-•Stock•plugin•to•add•in•some•statically•configured•text•into•a•commit•message.'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (98 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  18| '''••feed.py•-•Stock•plugin•that•pulls•latest•n•items•from•a•feed•by•a•given•author.•'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  27| class•Feed(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/feed.py
+|  41| ••••••••••••if•self.author•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/feed.py
+|  42| ••••••••••••••••message_file.write('Last•%(item_count)d•entries•from•%(feed_title)s:\n'\
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  42| ••••••••••••••••message_file.write('Last•%(item_count)d•entries•from•%(feed_title)s:\n'\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/feed.py
+|  43| ••••••••••••••••••••%•{'item_count'•:•len(last_items),•'feed_title'•:•title})
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/feed.py
+|  43| ••••••••••••••••••••%•{'item_count'•:•len(last_items),•'feed_title'•:•title})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/feed.py
+|  43| ••••••••••••••••••••%•{'item_count'•:•len(last_items),•'feed_title'•:•title})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/feed.py
+|  45| ••••••••••••••••message_file.write('Last•%(item_count)d•entries•from•%(feed_title)s•by•%(author)s:\n'\
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (102 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  45| ••••••••••••••••message_file.write('Last•%(item_count)d•entries•from•%(feed_title)s•by•%(author)s:\n'\
+|    | [NORMAL] PycodestyleBear (E502):
+|    | E502 the backslash is redundant between brackets'
+
+src/flashbake/plugins/feed.py
+|  46| ••••••••••••••••••••%•{'item_count'•:•len(last_items),•'feed_title'•:•title,•'author':•self.author})
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/feed.py
+|  46| ••••••••••••••••••••%•{'item_count'•:•len(last_items),•'feed_title'•:•title,•'author':•self.author})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/feed.py
+|  46| ••••••••••••••••••••%•{'item_count'•:•len(last_items),•'feed_title'•:•title,•'author':•self.author})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/feed.py
+|  46| ••••••••••••••••••••%•{'item_count'•:•len(last_items),•'feed_title'•:•title,•'author':•self.author})
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (100 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  48| ••••••••••••••••#•edit•the•'%s'•if•you•want•to•add•a•label,•like•'Title•%s'•to•the•output
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  52| ••••••••••••message_file.write('Couldn\'t•fetch•entries•from•feed,•%s.\n'•%•self.url)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  57| ••••••••"""•Fetch•up•to•the•limit•number•of•items•from•the•specified•feed•with•the•specified
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  63| ••••••••••••if•not•'title'•in•feed.feed:
+|    | [NORMAL] PycodestyleBear (E713):
+|    | E713 test for membership should be 'not in''
+
+src/flashbake/plugins/feed.py
+|  64| ••••••••••••••••logging.info('Feed•title•is•empty,•feed•is•either•malformed•or•unavailable.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (93 > 79 characters)'
+
+src/flashbake/plugins/feed.py
+|  71| ••••••••••••••••if•self.author•!=•None•and•entry.author•!=•self.author:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/feed.py
+|  76| ••••••••••••••••by_creator.append({"title"•:•title,•"link"•:•link})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/feed.py
+|  76| ••••••••••••••••by_creator.append({"title"•:•title,•"link"•:•link})
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+src/flashbake/plugins/feed.py
+|  85| ••••••••••••logging.error('Plugin,•%s,•failed•to•connect•with•network.'•%•self.__class__)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/timezone.py
+|  19| '''••timezone.py•-•Stock•plugin•to•find•the•system's•time•zone•add•to•the•commit•message.'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+src/flashbake/plugins/timezone.py
+|  27| PLUGIN_SPEC•=•'flashbake.plugins.timezone:TimeZone'
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/timezone.py
+|  29| class•TimeZone(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/plugins/timezone.py
+|  39| ••••••••if•zone•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/timezone.py
+|  46| def•findtimezone(config):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/plugins/timezone.py
+|  54| ••••if•None•!=•zone:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/timezone.py
+|  74| ••••••••(zone,•city)•=•os.path.split(zone);
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+src/flashbake/plugins/timezone.py
+|  75| ••••••••(zone,•continent)•=•os.path.split(zone);
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+src/flashbake/plugins/timezone.py
+|  84| ••••logging.warn('Could•not•get•TZ•from•env•var,•/etc/timezone,•or•.flashbake.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+test/test.py
+|  29| #•just•provide•the•command•line•hook•into•the•tests
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+test/test.py
+|  32| ••••••••••••format='%(message)s')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/test.py
+|  39| ••••••••from•flashbake.commit•import•commit•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+test/test.py
+|  39| ••••••••from•flashbake.commit•import•commit•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+test/test.py
+|  40| ••••••••from•flashbake.control•import•parse_control•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+test/test.py
+|  40| ••••••••from•flashbake.control•import•parse_control•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+test/test.py
+|  41| ••••••••from•flashbake.context•import•buildmessagefile•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E261):
+|    | E261 at least two spaces before inline comment'
+
+test/test.py
+|  41| ••••••••from•flashbake.context•import•buildmessagefile•#@UnusedImport
+|    | [NORMAL] PycodestyleBear (E262):
+|    | E262 inline comment should start with '# ''
+
+test/test.py
+|  48| ••••config_suite•=•unittest.TestLoader().loadTestsFromTestCase(test.config.ConfigTestCase)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+test/test.py
+|  49| ••••files_suite•=•unittest.TestLoader().loadTestsFromTestCase(test.files.FilesTestCase)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  43| ••••••••if•self.notice_from•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/mail.py
+|  55| ••••••••••••body•+=•'\nMake•sure•there•is•not•a•typo•in•.flashbake•and•that•you•created/saved•the•file.\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (106 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  58| ••••••••••••body•+=•'\nThe•following•files•have•been•deleted•from•version•control:\n\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  63| ••••••••••••body•+=•'\nYou•may•restore•these•files•or•remove•them•from•.flashbake•after•running•flashbake•--purge•'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (115 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  67| ••••••••••••body•+=•'\nThe•following•files•in•.flashbake•are•links•or•have•a•link•in•their•directory•path.\n\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (111 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  73| ••••••••••••••••••••body•+=•'\t'•+•link•+•'•is•a•link•on•the•way•to•'•+•file•+•'\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (83 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  75| ••••••••••••body•+=•'\nMake•sure•the•physical•file•and•its•parent•directories•reside•in•the•project•directory.\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (113 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  78| ••••••••••••body•+=•'\nThe•following•files•in•.flashbake•are•not•in•the•project•directory.\n\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (95 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  83| ••••••••••••body•+=•'\nOnly•files•in•the•project•directory•can•be•tracked•and•committed.\n'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (91 > 79 characters)'
+
+src/flashbake/plugins/mail.py
+|  86| ••••••••if•control_config.dry_run:
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (2)'
+
+src/flashbake/plugins/mail.py
+|  88| ••••••••••••if•self.notice_to•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/mail.py
+|  96| ••••••••••••••••%•os.path.realpath(hot_files.project_dir))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/mail.py
+| 103| ••••••••••••••••%•(self.smtp_host,•self.smtp_port))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/mail.py
+| 115| ••••••••••••logging.debug("SMTP•Error:\n"•+•str(e));
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+test/files.py
+|   6| class•FilesTestCase(unittest.TestCase):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/files.py
+|  12| ••••••••self.project_files•=•[•'todo.txt',•'stickies.txt',•'my•stuff.txt',
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+test/files.py
+|  13| ••••••••'bar/novel.txt',•'baz/novel.txt',•'quux/novel.txt'•]
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  13| ••••••••'bar/novel.txt',•'baz/novel.txt',•'quux/novel.txt'•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+test/files.py
+|  22| ••••••••••••••••••••'Should•contain•relative•file,•%s'•%•file)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  26| ••••••••••••••••'Should•have•expanded•glob.')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  33| ••••••••••••••••••••'Should•contain•absolute•file,•%s,•as•relative•path,•%s.'
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  34| ••••••••••••••••••••%•(abs_file,•file))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  38| ••••••••••••••••'Should•have•expanded•glob.')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  45| ••••••••••••••••'None•of•the•provided•files•should•exist')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  50| ••••••••••••••••'Outside•files•should•get•caught')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/files.py
+|  55| ••••••••••••••••'Linked•files•should•get•caught')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/music.py
+|  33| class•Banshee(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/music.py
+|  38| ••••••••self.define_property('db',•default=os.path.join(os.path.expanduser('~'),•'.config',•'banshee-1',•'banshee.db'))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (119 > 79 characters)'
+
+src/flashbake/plugins/music.py
+|  57| ••••••••••••message_file.write('Last•%d•track(s)•played•in•Banshee:\n'•%•len(results))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+src/flashbake/plugins/music.py
+|  60| ••••••••••••••••if•self.last_played_format•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/music.py
+|  63| ••••••••••••••••••••••••••••last_played)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/music.py
+|  67| ••••••••••••••••••••••••(result[0],•result[1],•last_played))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/music.py
+|  77| ••••'''•Based•on•Andrew•Heiss'•plugin•which•is•MIT•licensed•which•should•be•compatible.•'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (91 > 79 characters)'
+
+src/flashbake/plugins/music.py
+|  81| ••••••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/music.py
+| 106| ••••••••proc•=•subprocess.Popen(args,•stdout=subprocess.PIPE,•stderr=subprocess.STDOUT,
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/music.py
+| 107| •••••••••••••••••••••••••••••close_fds=True)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/context.py
+|  18| '''••context.py•-•Build•up•some•descriptive•context•for•automatic•commit•to•git'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/context.py
+|  25| def•buildmessagefile(config):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/context.py
+|  30| ••••msg_filename•=•'/tmp/git_msg_%d'•%•random.randint(0,1000)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+src/flashbake/context.py
+|  34| ••••••••msg_filename•=•'/tmp/git_msg_%d'•%•random.randint(0,1000)
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+src/flashbake/context.py
+|  48| ••••••••••••message_file.write('All•of•the•plugins•that•use•the•network•failed.\n')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (83 > 79 characters)'
+
+src/flashbake/context.py
+|  49| ••••••••••••message_file.write('Your•computer•may•not•be•connected•to•the•network.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+src/flashbake/control.py
+|  29| def•parse_control(project_dir,•control_file,•config=None,•results=None):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/control.py
+|  34| ••••if•None•==•results:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/control.py
+|  39| ••••if•None•==•config:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/control.py
+|  57| def•prepare_control(hot_files,•control_config):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/control.py
+|  64| 
+|    | [NORMAL] PycodestyleBear (W391):
+|    | W391 blank line at end of file'
+
+test/config.py
+|  16| ••••••••••••••••••••'Should•not•be•able•to•load•invalid•plugin.')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+|  24| ••••••••••••••••••••'Should•not•be•able•to•load•unknown•plugin.')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+|  34| ••••••••••••••••••••'Error•should•specify•failure•reason,•%s.'•%•reason)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+|  37| ••••••••self.__testattr('test.plugins:NoConnectable',•'connectable',•'missing_attribute')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+test/config.py
+|  40| ••••••••self.__testattr('test.plugins:WrongConnectable',•'connectable',•'invalid_attribute')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+test/config.py
+|  52| ••••••••self.__testattr('test.plugins:WrongAddContext',•'addcontext',•'invalid_attribute')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (90 > 79 characters)'
+
+test/config.py
+|  58| ••••••••••••••••'flashbake.plugins.uptime:UpTime',
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+|  59| ••••••••••••••••'flashbake.plugins.timezone:TimeZone',
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+|  60| ••••••••••••••••'flashbake.plugins.feed:Feed')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+|  67| ••••••••"""Ensure•that•accessing•feeds•with•no•entry.author•doesn't•cause•failures•if•the
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+test/config.py
+|  70| ••••••••self.config.extra_props['feed_url']•=•"http://twitter.com/statuses/user_timeline/704593.rss"
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (100 > 79 characters)'
+
+test/config.py
+|  78| ••••••••••••self.fail('Should•not•be•able•to•initialize•without•full•plugin•props.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (84 > 79 characters)'
+
+test/config.py
+|  81| ••••••••••••••••••••'Feed•plugin•should•fail•missing•property.')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+|  83| ••••••••••••••••••••'Missing•property•should•be•feed.')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+| 101| ••••••••••••••••••••'Error•should•specify•failure•reason,•%s.'•%•reason)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+test/config.py
+| 103| ••••••••••••••••••••'Error•should•specify•failed•name,•%s'•%•name)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+setup.py
+|   8| setup(name='flashbake',
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+setup.py
+|   9| ••••••••version='0.27.1',
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  10| ••••••••author="Thomas•Gideon",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  11| ••••••••author_email="cmdln@thecommandline.net",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  12| ••••••••maintainer="Thomas•Gideon",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  13| ••••••••maintainer_email="cmdln@thecommandline.net",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  14| ••••••••description="Automation•to•feed•life•log•into•version•control•message•stream.",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  14| ••••••••description="Automation•to•feed•life•log•into•version•control•message•stream.",
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+setup.py
+|  15| ••••••••long_description="""•Flashbake•was•designed•to•help•technically•savvy
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  20| ••••••••platforms=[•"noarch"•],
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  20| ••••••••platforms=[•"noarch"•],
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+setup.py
+|  20| ••••••••platforms=[•"noarch"•],
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+setup.py
+|  21| ••••••••classifiers=[
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  31| ••••••••url="http://thecommandline.net",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  32| ••••••••download_url="https://github.com/commandline/flashbake/downloads",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  33| ••••••••license="GPLv3",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  34| ••••••••package_dir={'':•'src'},
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  35| ••••••••packages=find_packages(where='./src/',•exclude=('./test/')),
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  36| ••••••••install_requires='''
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  40| ••••••••entry_points={
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  41| ••••••••••••••••'console_scripts':•[•'flashbake•=•flashbake.console:main',
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+setup.py
+|  42| •••••••••••••••••••••••••••••••••••••'flashbakeall•=•flashbake.console:multiple_projects'•]
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (91 > 79 characters)'
+
+setup.py
+|  42| •••••••••••••••••••••••••••••••••••••'flashbakeall•=•flashbake.console:multiple_projects'•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+setup.py
+|  44| ••••••••include_package_data•=•True,
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  44| ••••••••include_package_data•=•True,
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+setup.py
+|  44| ••••••••include_package_data•=•True,
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E251):
+|    | E251 unexpected spaces around keyword / parameter equals'
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '{''
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E203):
+|    | E203 whitespace before ':''
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+setup.py
+|  45| ••••••••exclude_package_data•=•{•''•:•[•'test/*'•]•},
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before '}''
+
+setup.py
+|  46| ••••••••test_suite="test",
+|    | [NORMAL] PycodestyleBear (E127):
+|    | E127 continuation line over-indented for visual indent'
+
+setup.py
+|  47| ••••••••)
+|    | [NORMAL] PycodestyleBear (E124):
+|    | E124 closing bracket does not match visual indentation'
+
+src/flashbake/git.py
+|  18| '''••git.py•-•Wrap•the•call•outs•to•git,•adding•sanity•checks•and•environment•set•up•if
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/git.py
+|  27| class•VCError(Exception):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/git.py
+|  35| class•Git:
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/git.py
+|  44| ••••••••if•git_path•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/git.py
+|  65| ••••••••if•filename•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/git.py
+|  74| ••••••••files•=•[•file•]
+|    | [NORMAL] PycodestyleBear (E201):
+|    | E201 whitespace after '[''
+
+src/flashbake/git.py
+|  74| ••••••••files•=•[•file•]
+|    | [NORMAL] PycodestyleBear (E202):
+|    | E202 whitespace before ']''
+
+src/flashbake/git.py
+|  86| ••••••••if•options•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/git.py
+|  88| ••••••••if•files•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/git.py
+|  91| ••••••••••••••••stderr=subprocess.STDOUT,•cwd=self.__cwd,•env=self.env)
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/git.py
+|  97| ••••••••if•git_path•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/git.py
+| 102| if•__name__•==•"__main__":
+|    | [NORMAL] PycodestyleBear (E305):
+|    | E305 expected 2 blank lines after class or function definition, found 1'
+
+src/flashbake/git.py
+| 104| ••••••••••••format='%(message)s')
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+src/flashbake/plugins/__init__.py
+|  24| class•PLUGIN_ERRORS(Enum):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/__init__.py
+|  42| ••••def•__str__(self):
+|    | [NORMAL] PycodestyleBear (E301):
+|    | E301 expected 1 blank line, found 0'
+
+src/flashbake/plugins/__init__.py
+|  43| ••••••••if•self.name•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/__init__.py
+|  60| ••••••••self.service_name,•self.property_prefix•=•service_and_prefix(plugin_spec)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+|  68| ••••••••••••raise•Exception('Call•AbstractPlugin.__init__•in•your•plugin\'s•__init__.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+|  75| ••••••••••••••••self.__shared_prop_defs.append(('%s_%s'•%•(property_prefix,•name),•type))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+|  79| ••••••••••••raise•Exception('Call•AbstractPlugin.__init__•in•your•plugin\'s•__init__.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+|  88| ••••••••••••••••assert•len(prop)•==•4,•"Property•definition,•%s,•is•invalid"•%•(prop,)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (86 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+|  91| ••••••••••••raise•Exception('Call•AbstractPlugin.__init__•in•your•plugin\'s•__init__.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (87 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+|  98| ••••••••"""•Optional•method•via•which•a•plugin•can•express•a•dependency•on•another•plugin.•"""
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+| 101| ••••def•__capture_property(self,•config,•name,•type=None,•required=False,•default=None):
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+| 105| ••••••••if•required•and•not•config_name•in•config.extra_props:
+|    | [NORMAL] PycodestyleBear (E713):
+|    | E713 test for membership should be 'not in''
+
+src/flashbake/plugins/__init__.py
+| 106| ••••••••••••raise•PluginError(PLUGIN_ERRORS.missing_property,•self.plugin_spec,•config_name)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+| 114| ••••••••if•type•!=•None•and•value•!=•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is not None:''
+
+src/flashbake/plugins/__init__.py
+| 119| ••••••••••••••••••••••••'The•value,•%s,•for•option,•%s,•could•not•be•parsed•as•%s.'
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (83 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+| 128| ••••••••raise•NotImplementedError('%s•must•be•implemented•in•subclass'•%•caller)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/plugins/__init__.py
+| 153| ••••••••"""•This•method•is•optional,•it•will•be•run•after•status•processing•but•before•commit•so•the
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (92 > 79 characters)'
+
+test/plugins.py
+|   8| class•FilesTestCase(unittest.TestCase):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+test/plugins.py
+|  15| class•MissingParent():
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  22| class•NoConnectable(flashbake.plugins.AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  29| class•NoAddContext(flashbake.plugins.AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  31| ••••••••flashbake.plugins.AbstractMessagePlugin.__init__(self,•plugin_spec,•True)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+test/plugins.py
+|  33| class•WrongConnectable(flashbake.plugins.AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  40| class•WrongAddContext(flashbake.plugins.AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  45| class•Plugin1(flashbake.plugins.AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  52| class•Plugin2(flashbake.plugins.AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  54| ••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+test/plugins.py
+|  62| class•Plugin3(flashbake.plugins.AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+test/plugins.py
+|  64| ••••
+|    | [NORMAL] PycodestyleBear (W293):
+|    | W293 blank line contains whitespace'
+
+src/flashbake/plugins/location.py
+|  32| class•Location(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/location.py
+|  39| ••••••••if•ip_addr•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/location.py
+|  44| ••••••••••••message_file.write('Failed•to•parse•location•data•for•IP•address.\n')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (81 > 79 characters)'
+
+src/flashbake/plugins/location.py
+|  50| ••••••••message_file.write('Current•location•is•%s•based•on•IP•%s.\n'•%•(location_str,•ip_addr))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (96 > 79 characters)'
+
+src/flashbake/plugins/location.py
+|  55| ••••••••if•cached.get('ip_addr','')•==•ip_addr:
+|    | [NORMAL] PycodestyleBear (E231):
+|    | E231 missing whitespace after ',''
+
+src/flashbake/plugins/location.py
+|  59| ••••••••for_ip•=•base_url•+•urllib.urlencode({'key':•'d2e4d26478b0759c225fd4b9113240e1ab7c1bf4f8fb673cba0a2ed52a351916',
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (120 > 79 characters)'
+
+src/flashbake/plugins/location.py
+|  77| ••••••••••••if•response•==•None•or•len(response)•==•0:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/location.py
+|  82| ••••••••••••••••if•child.localName•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/plugins/location.py
+|  93| ••••••••••••logging.error('Plugin,•%s,•failed•to•connect•with•network.'•%•self.__class__)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/plugins/location.py
+| 139| ••••••••••••••••continue;
+|    | [NORMAL] PycodestyleBear (E703):
+|    | E703 statement ends with a semicolon'
+
+src/flashbake/plugins/location.py
+| 169| ••••••••••••logging.error('Plugin,•%s,•failed•to•connect•with•network.'•%•self.__class__)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (89 > 79 characters)'
+
+src/flashbake/commit.py
+|  18| '''••commit.py•-•Parses•a•project's•control•file•and•wraps•git•operations,•calling•the•context
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (94 > 79 characters)'
+
+src/flashbake/commit.py
+|  31| DELETED_RE•=•re.compile('#\s*deleted:.*')
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/commit.py
+|  33| def•commit(control_config,•hot_files,•quiet_mins):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/commit.py
+|  34| ••••#•change•to•the•project•directory,•necessary•to•find•the•.flashbake•file•and
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/commit.py
+|  63| ••••••••••••logging.debug('Parsing•status•line•%s•to•determine•commit•action'•%•line)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (85 > 79 characters)'
+
+src/flashbake/commit.py
+|  78| ••••••••••••••••logging.debug('Change•for•file,•%s,•is•too•recent.'•%•pending_file)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (83 > 79 characters)'
+
+src/flashbake/commit.py
+|  87| ••••••••#•this•shouldn't•happen•since•HotFiles.addfile•uses•glob.iglob•to•expand
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/commit.py
+| 104| ••••••••••••••••logging.debug('%s•exists•but•is•unknown•by•git.'•%•control_file)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/commit.py
+| 113| ••••••••if•control_re.search(status_output)•==•None:
+|    | [NORMAL] PycodestyleBear (E711):
+|    | E711 comparison to None should be 'if cond is None:''
+
+src/flashbake/commit.py
+| 117| ••••••••••••logging.error('%s•is•in•the•status•message•but•failed•other•tests.'•%•control_file)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (95 > 79 characters)'
+
+src/flashbake/commit.py
+| 118| ••••••••••••logging.error('Try•\'git•status•"%s"\'•for•more•info.'•%•control_file)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/commit.py
+| 141| ••••••••logging.info('No•missing•or•untracked•files•found,•not•sending•warning•notice.')
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (88 > 79 characters)'
+
+src/flashbake/commit.py
+| 143| def•purge(control_config,•hot_files):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/commit.py
+| 144| ••••#•change•to•the•project•directory,•necessary•to•find•the•.flashbake•file•and
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/commit.py
+| 160| ••••••••logging.info('Committing•removal•of•known•files,•%s.'•%•hot_files.deleted)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+
+src/flashbake/commit.py
+| 185| ••••••••••••••••%•os.path.realpath(hot_files.project_dir))
+|    | [NORMAL] PycodestyleBear (E128):
+|    | E128 continuation line under-indented for visual indent'
+
+plugins/hellodolly.py
+|  20| class•HelloDolly(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/plugins/lastfm.py
+|  19| '''••lastfm.py•-•Plugin•that•pulls•latest•n•items•from•your•last.fm•account.•'''
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (80 > 79 characters)'
+
+src/flashbake/plugins/lastfm.py
+|  28| LASTFM•=•"http://ws.audioscrobbler.com/2.0/?method="
+|    | [NORMAL] PycodestyleBear (E303):
+|    | E303 too many blank lines (3)'
+
+src/flashbake/plugins/lastfm.py
+|  31| class•LastFM(AbstractMessagePlugin):
+|    | [NORMAL] PycodestyleBear (E302):
+|    | E302 expected 2 blank lines, found 1'
+
+src/flashbake/plugins/lastfm.py
+|  42| ••••••••url•=•"%suser.getrecentTracks&user=%s&api_key=%s&limit=%s&format=json"•%•(LASTFM,•self.user_name,•self.api_key,•self.limit)
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (131 > 79 characters)'
+
+src/flashbake/plugins/lastfm.py
+|  52| ••••••••••••message_file.write("Track•from•Last.fm:•%s•by•%s\n"•%•(track,•artist))
+|    | [NORMAL] PycodestyleBear (E501):
+|    | E501 line too long (82 > 79 characters)'
+Executing section yaml...
